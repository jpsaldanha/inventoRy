% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/CRboot.x.csl.R
\name{CRboot.x.csl}
\alias{CRboot.x.csl}
\title{Estimate Bootstrap ROP or SS from LTD Data for a Continuous Review Policy with a
Target Fill Rate}
\usage{
CRboot.x.csl(x, p1, B = 500, roptru = TRUE, seed = as.numeric(Sys.time()))
}
\arguments{
\item{x}{a vector of lead time demands}

\item{p1}{the cycle service level as PNS}

\item{B}{the number of bootstrap resamples, default is 500}

\item{roptru}{if TRUE returns the ROP else the SS, default is the ROP}

\item{seed}{a random seed, default is the computer time}
}
\value{
the bootstrap estimate ROP or SS
}
\description{
The function uses an input vector of lead time demands (LTD) to determine the reorder
point (ROP) for a target P1 cycle service level i.e. probability of no stockouts
PNS. The full algorithm is provided in Bookbinder and Lordahl (1989). The inputs must
include a LTD vector and a P1 PNS. An optional number of B bootstrap resamples may be
provided, the default is set to 500. It is recommended not to set B<200 resamples. As B
increases (e.g. B>1000) the marginal accuracy gained is trivial and the run time will
increase, especially if used in batch runs to determine ROPs over hunderds of items.
}
\details{
The ROP is the default value returned from the function but if safety stock is desired
then an optional input can be added where "roptru=FALSE" will return the safety stock.

Note that the bootstrap approach utilizes a random resampling of the input LTD resamples
with replacement. The random seed for the random resampling is set to the current machine's
system time. Hence, if replicability of the results are desired e.g., the ROP and safety
stock for a number of items need to be calculated then it is recommended to use the input
"seed=" (see examples).
}
\examples{
a<-rnorm(30,100,20)
Returns ROP with 500 bootstrap resamples for a PNS of 95\%
CRboot.x.csl(a,.95,500)
Returns the SS with 500 bootstrap resamples for a PNS of 95\%
CRboot.x.csl(a,.95,500,FALSE)
Returns the ROP and SS from the same random numbers
CRboot.x.csl(a,50,.95,500,TRUE,0)
CRboot.x.csl(a,50,.95,500,FALSE,0)
}
